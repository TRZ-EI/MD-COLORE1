* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Mon Dec 05 15:18:06 2016  PAGE 001

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

     1                                  ;/*********************************************************************
     2                                  ;*
     3                                  ;* Device     : M16C/60,30,20,10
     4                                  ;*
     5                                  ;* File Name  : ncrt0.a30
     6                                  ;*
     7                                  ;* Abstract   : Startup Program for M16C/60,30,20,10.
     8                                  ;*
     9                                  ;* History    : 1.20  (2009-01-27)
    10                                  ;*
    11                                  ;* Copyright(c) 2009 Renesas Technology Corp.
    12                                  ;*               And Renesas Solutions Corp.,All Rights Reserved. 
    13                                  ;*
    14                                  ;*********************************************************************/
    15                                  
    16                                  ;---------------------------------------------------------------------
    17                                  ; include files
    18                                  ;---------------------------------------------------------------------
    19                                  		.list		OFF
    20                                  		.list		ON
    21                                  
    22                                  ;---------------------------------------------------------------------
    23                                  ; BankSelect definition for 4M mode
    24                                  ;---------------------------------------------------------------------
    25                                  ;		.glb		__BankSelect
    26                                  ;__BankSelect	.equ	0BH
    27                                  
    28                                  ;=====================================================================
    29                                  ; Interrupt section start
    30                                  ;---------------------------------------------------------------------
    31                                  		.insf		start,S,0
    32                                  		.glb		start
    33                                  		.section	interrupt
    34  00000                           start:
    35                                  ;---------------------------------------------------------------------
    36                                  ; after reset,this program will start
    37                                  ;---------------------------------------------------------------------
    38  00000  EB400000r                		ldc			#istack_top,isp			;set istack pointer
    39  00004  C7020A00              S  		mov.b		#02h,0ah
    40  00008  B70400                Z  		mov.b		#00h,04h				;set processer mode 
    41  0000B  B70A00                Z  		mov.b		#00h,0ah
    42                                  .if __STACKSIZE__ != 0
    43  0000E  EB308000                 		ldc			#0080h,flg
    44  00012  EB500000r                		ldc			#stack_top,sp			;set stack pointer 
    45                                  .else
    46                                  .endif
    47  00016  EB600004                 		ldc			#data_SE_top,sb			;set sb register 
    48  0001A  EB200F00                 		ldintb		#__VECTOR_ADR__
               EB1000FD 
    49                                  
    50                                  ;=====================================================================
    51                                  ; NEAR area initialize.
    52                                  ;---------------------------------------------------------------------
    53                                  ; bss zero clear
    54                                  ;---------------------------------------------------------------------
    55                                  		N_BZERO		bss_SE_top,bss_SE
    56  00022  B4                1 M Z  		mov.b		#00H,R0L
    57  00023  AA0000r           1 M S  		mov.w		#(bss_SE_top & 0FFFFH),A1
    58  00026  75C30000r         1 M    		mov.w		#sizeof bss_SE,R3
    59  0002A  7CEA              1 M    		sstr.b
    60                           1 M    		.endm
    61                                  		N_BZERO		bss_SO_top,bss_SO
* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Mon Dec 05 15:18:06 2016  PAGE 002

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

    62  0002C  B4                1 M Z  		mov.b		#00H,R0L
    63  0002D  AA0000r           1 M S  		mov.w		#(bss_SO_top & 0FFFFH),A1
    64  00030  75C30000r         1 M    		mov.w		#sizeof bss_SO,R3
    65  00034  7CEA              1 M    		sstr.b
    66                           1 M    		.endm
    67                                  		N_BZERO		bss_NE_top,bss_NE
    68  00036  B4                1 M Z  		mov.b		#00H,R0L
    69  00037  AA0000r           1 M S  		mov.w		#(bss_NE_top & 0FFFFH),A1
    70  0003A  75C30000r         1 M    		mov.w		#sizeof bss_NE,R3
    71  0003E  7CEA              1 M    		sstr.b
    72                           1 M    		.endm
    73                                  		N_BZERO		bss_NO_top,bss_NO
    74  00040  B4                1 M Z  		mov.b		#00H,R0L
    75  00041  AA0000r           1 M S  		mov.w		#(bss_NO_top & 0FFFFH),A1
    76  00044  75C30000r         1 M    		mov.w		#sizeof bss_NO,R3
    77  00048  7CEA              1 M    		sstr.b
    78                           1 M    		.endm
    79                                  
    80                                  ;---------------------------------------------------------------------
    81                                  ; initialize data section
    82                                  ;---------------------------------------------------------------------
    83                                  		N_BCOPY		data_SEI_top,data_SE_top,data_SE
    84  0004A  A20000r           1 M S  		mov.w		#(data_SEI_top & 0FFFFH),A0
    85  0004D  74C300r           1 M    		mov.b		#(data_SEI_top >> 16),R1H
    86  00050  AA0004            1 M S  		mov.w		#data_SE_top,A1
    87  00053  75C30000r         1 M    		mov.w		#sizeof data_SE,R3
    88  00057  7CE8              1 M    		smovf.b
    89                           1 M    		.endm
    90                                  		N_BCOPY		data_SOI_top,data_SO_top,data_SO
    91  00059  A20000r           1 M S  		mov.w		#(data_SOI_top & 0FFFFH),A0
    92  0005C  74C300r           1 M    		mov.b		#(data_SOI_top >> 16),R1H
    93  0005F  AA0000r           1 M S  		mov.w		#data_SO_top,A1
    94  00062  75C30000r         1 M    		mov.w		#sizeof data_SO,R3
    95  00066  7CE8              1 M    		smovf.b
    96                           1 M    		.endm
    97                                  		N_BCOPY		data_NEI_top,data_NE_top,data_NE
    98  00068  A20000r           1 M S  		mov.w		#(data_NEI_top & 0FFFFH),A0
    99  0006B  74C300r           1 M    		mov.b		#(data_NEI_top >> 16),R1H
   100  0006E  AA0000r           1 M S  		mov.w		#data_NE_top,A1
   101  00071  75C30000r         1 M    		mov.w		#sizeof data_NE,R3
   102  00075  7CE8              1 M    		smovf.b
   103                           1 M    		.endm
   104                                  		N_BCOPY		data_NOI_top,data_NO_top,data_NO
   105  00077  A20000r           1 M S  		mov.w		#(data_NOI_top & 0FFFFH),A0
   106  0007A  74C300r           1 M    		mov.b		#(data_NOI_top >> 16),R1H
   107  0007D  AA0000r           1 M S  		mov.w		#data_NO_top,A1
   108  00080  75C30000r         1 M    		mov.w		#sizeof data_NO,R3
   109  00084  7CE8              1 M    		smovf.b
   110                           1 M    		.endm
   111                                  
   112                                  ;=====================================================================
   113                                  ; FAR area initialize.
   114                                  ;---------------------------------------------------------------------
   115                                  ; bss zero clear
   116                                  ;---------------------------------------------------------------------
   117                                  .if __FAR_RAM_FLG__ != 0
   118                                  .endif
   119                                  
   120                                  ;---------------------------------------------------------------------
   121                                  ; initialize data section
   122                                  ;---------------------------------------------------------------------
   123                                  .if __FAR_RAM_FLG__ != 0
* R8C/Tiny,M16C/60 SERIES ASSEMBLER *   SOURCE LIST       Mon Dec 05 15:18:06 2016  PAGE 003

  SEQ.  LOC.   OBJ.              0XMSDA ....*....SOURCE STATEMENT....7....*....8....*....9....*....0....*....1....*....2....*....3....*....4....*....5....*....6....*....7....*....8....*....9....*....0

   124                            X     .if __STACKSIZE__ != 0
   125                            X     .else
   126                            X     .endif
   127                                  .endif
   128                                  
   129                                  ;=====================================================================
   130                                  ; heap area initialize
   131                                  ;---------------------------------------------------------------------
   132                                  .if __HEAPSIZE__ != 0
   133                                  		.glb		__mnext
   134                                  		.glb		__msize
   135  00086  75CF0000r0000r           		mov.w		#(heap_top&0FFFFH),__mnext
   136  0008C  75CF0000r0000r           		mov.w		#(heap_top>>16),__mnext+2
   137  00092  75CF0000r0003            		mov.w		#(__HEAPSIZE__&0FFFFH),__msize
   138  00098  D90F0000r             Q  		mov.w		#(__HEAPSIZE__>>16),__msize+2
   139                                  .endif
   140                                  
   141                                  ;=====================================================================
   142                                  ; Initialize standard I/O
   143                                  ;---------------------------------------------------------------------
   144                                  .if __STANDARD_IO__ == 1
   145                                  .endif
   146                                  
   147                                  ;=====================================================================
   148                                  ; Call main() function
   149                                  ;---------------------------------------------------------------------
   150  0009C  EB700000                 		ldc			#0h,fb				; for debuger
   151                                  
   152                                  		.glb		_main
   153  000A0  FD000000r             A  		jsr.a		_main
   154                                  
   155                                  ;=====================================================================
   156                                  ; exit() function
   157                                  ;---------------------------------------------------------------------
   158                                  		.glb		_exit
   159                                  		.glb		$exit
   160  000A4                           _exit:									; End program
   161  000A4                           $exit:
   162  000A4  FEFF                  B  		jmp			_exit
   163                                  		.einsf
   164                                  ;=====================================================================
   165                                  ; dummy interrupt function
   166                                  ;---------------------------------------------------------------------
   167                                  		.glb		dummy_int
   168  000A6                           dummy_int:
   169  000A6  FB                       		reit
   170                                  
   171                                  		.end

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00171   LINES

Section List

Attr        Size          Name
DATA     0000000(00000H)  data_SE
DATA     0000000(00000H)  bss_SE
DATA     0000000(00000H)  data_SO
DATA     0000000(00000H)  bss_SO
DATA     0000000(00000H)  data_NE
DATA     0000000(00000H)  bss_NE
DATA     0000000(00000H)  data_NO
DATA     0000000(00000H)  bss_NO
DATA     0000768(00300H)  istack
DATA     0000768(00300H)  stack
DATA     0000768(00300H)  heap
ROMDATA  0000000(00000H)  rom_FE
ROMDATA  0000000(00000H)  rom_FO
ROMDATA  0000000(00000H)  data_SEI
ROMDATA  0000000(00000H)  data_SOI
ROMDATA  0000000(00000H)  data_NEI
ROMDATA  0000000(00000H)  data_NOI
CODE     0000000(00000H)  program
CODE     0000000(00000H)  interrupt
CODE     0000000(00000H)  program_S
ROMDATA  0000256(00100H)  vector
ROMDATA  0000036(00024H)  fvector
CODE     0000167(000A7H)  interrupt
